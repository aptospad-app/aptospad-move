import { AptosClient, AptosAccount, Types, TxnBuilderTypes, HexString } from "aptos";
import { AptosParserRepo } from "./parserRepo";
import { StructTag } from "./typeTag";
import { U128, U64, U8 } from "./builtinTypes";
import { ActualStringClass } from "./nativeFuncs";
declare type AcceptedScriptFuncArgType = any[] | U8 | U64 | U128 | HexString | boolean | ActualStringClass;
export declare type OptionTransaction = {
    maxGasAmount?: number;
    gasUnitPrice?: number;
    expireTimestamp?: number;
};
export declare function buildPayload(moduleAddress: HexString, moduleName: string, funcName: string, typeArguments: string[], args: AcceptedScriptFuncArgType[], isJSON?: boolean): TxnBuilderTypes.TransactionPayloadEntryFunction | Types.TransactionPayload_EntryFunctionPayload;
export declare function sendPayloadTx(client: AptosClient, account: AptosAccount, payload: TxnBuilderTypes.TransactionPayload | Types.TransactionPayload_EntryFunctionPayload, option?: OptionTransaction): Promise<Types.UserTransaction>;
export declare function sendPayloadTxAndLog(client: AptosClient, account: AptosAccount, payload: TxnBuilderTypes.TransactionPayload | Types.TransactionPayload_EntryFunctionPayload, option?: OptionTransaction, log?: boolean): Promise<Types.UserTransaction>;
export declare type SimulationKeys = {
    pubkey: HexString;
    address: HexString;
};
export declare const SIM_KEYS: SimulationKeys;
export declare function getSimulationKeys(account: AptosAccount): SimulationKeys;
export declare function simulatePayloadTx(client: AptosClient, keys: SimulationKeys, payload: TxnBuilderTypes.TransactionPayload | Types.TransactionPayload_EntryFunctionPayload, option?: OptionTransaction): Promise<Types.UserTransaction>;
export declare function simulatePayloadTxAndLog(client: AptosClient, keys: SimulationKeys, payload: TxnBuilderTypes.TransactionPayload | Types.TransactionPayload_EntryFunctionPayload, option?: OptionTransaction, log?: boolean): Promise<Types.UserTransaction>;
export declare function generateBCSSimulation(pubkey: HexString, rawTxn: TxnBuilderTypes.RawTransaction): Uint8Array;
export declare function takeSimulationValue<T>(tx: Types.UserTransaction, tag: StructTag, repo: AptosParserRepo): T;
export {};
//# sourceMappingURL=txSender.d.ts.map