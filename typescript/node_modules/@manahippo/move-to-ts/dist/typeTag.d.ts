import { HexString } from "aptos";
import { Types } from "aptos";
import { StructInfoType } from "./parserRepo";
export declare enum AtomicTypeTag {
    Bool = "bool",
    U8 = "u8",
    U64 = "u64",
    U128 = "u128",
    Address = "address",
    Signer = "signer"
}
export declare function isAtomicTypeTag(val: any): val is AtomicTypeTag;
export declare class StructTag {
    address: HexString;
    module: string;
    name: string;
    typeParams: TypeTag[];
    readonly kind = "StructTag";
    constructor(address: HexString, module: string, name: string, typeParams: TypeTag[]);
    static isInstance(val: any): val is StructTag;
    getFullname(): string;
    getShortAddressFullName(): string;
    getParamlessName(): string;
    getShortAddressParamlessName(): string;
    getAptosMoveTypeTag(): Types.MoveStructTag;
}
export declare class SimpleStructTag extends StructTag {
    structInfo: StructInfoType;
    constructor(structInfo: StructInfoType, typeParams?: TypeTag[]);
}
export declare class VectorTag {
    elementType: TypeTag;
    readonly kind = "VectorTag";
    constructor(elementType: TypeTag);
    static isInstance(val: any): val is VectorTag;
}
export declare class TypeParamIdx {
    index: number;
    readonly kind = "TypeParamIdx";
    constructor(index: number);
    static isInstance(val: any): val is TypeParamIdx;
}
export declare type TypeTag = AtomicTypeTag | VectorTag | StructTag | TypeParamIdx;
export declare function getTypeTagFullname(typeTag: TypeTag): string;
export declare function getShortAddressTypeTagFullname(typeTag: TypeTag): string;
export declare function getTypeTagParamlessName(typeTag: TypeTag): string;
export declare function getShortAddressTypeTagParamlessName(typeTag: TypeTag): string;
export declare function getTypeParamsString(typeParams: TypeTag[]): string;
export declare function parseQualifiedStructTag(name: string): [null | StructTag, string];
export declare function parseVectorTag(name: string): [null | VectorTag, string];
export declare function parseAtomicTag(name: string): [null | AtomicTypeTag, string];
export declare function parseTypeParameter(name: string): [null | TypeParamIdx, string];
export declare function parseTypeTag(name: string): [null | TypeTag, string];
export declare function parseTypeTagOrThrow(name: string): TypeTag;
export declare function parseMoveStructTag(moveTag: Types.MoveStructTag): StructTag;
export declare function parseResourceType(fullname: string): StructTag;
export declare function substituteTypeParams(toSubstitute: TypeTag, typeParams: TypeTag[]): TypeTag;
export declare function isTypeTagConcrete(tag: TypeTag): boolean;
//# sourceMappingURL=typeTag.d.ts.map